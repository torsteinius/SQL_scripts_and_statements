USE [DM_SAP]
GO
/****** Object:  StoredProcedure [trans].[RunAllSCD]    Script Date: 01.11.2022 01:34:42 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [trans].[RunAllSCD]
    @from_database varchar(100),
    @to_database varchar(100)
 
-- =============================================
-- Author:        Torstein Lunde
-- Create date: 11.05.2019
-- =============================================
 
AS
    --Get all databases 
    DECLARE @table_name VARCHAR(50), @business_key VARCHAR(30)
    DECLARE @from_table VARCHAR(150), @to_table VARCHAR(150)
    DECLARE @operation_table VARCHAR(150)
    DECLARE @cursor_SQL NVARCHAR(550)
	DECLARE @type_operation NVARCHAR(30)
 
    SET @operation_table = @from_database+'.[operation].[SCD_setup]'
 
    --USING DW_Staging_SSIS
 
    DECLARE table_cursor CURSOR FOR 
        SELECT 
            [table_name]
            ,[business_key]
			,type_operasjon
        FROM [operation].[SCD_setup]
        WHERE  Activated = 1
        ORDER BY id
 
    OPEN table_cursor 
 
    FETCH NEXT FROM table_cursor INTO
        @table_name, @business_key, @type_operation
 
    WHILE @@FETCH_STATUS = 0
    BEGIN
 
        PRINT @from_table
        SET @from_table = @from_database + '.trans.' + @table_name
        SET @to_table = @to_database + '.mart.' + @table_name
 
        IF @type_operation = 'SCD1'
			EXEC trans.SCD_type1 @from_table, @to_table, @business_key;
		ELSE IF @type_operation = 'SCD2'
			EXEC trans.SCD_type2 @from_table, @to_table, @business_key;

 
        /*RAISERROR(@MessageOutput,0,1) WITH NOWAIT*/
 
        FETCH NEXT FROM table_cursor INTO
            @table_name, @business_key, @type_operation
    END
    CLOSE table_cursor
    DEALLOCATE table_cursor
 
RETURN 0
